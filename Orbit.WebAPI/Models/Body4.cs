/*
 * CDS - GtmEntries
 *
 * CDS - GtmEntries
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace APIMDemo.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class Body4 : IEquatable<Body4>
    { 
        /// <summary>
        /// filename
        /// </summary>
        /// <value>filename</value>
        [DataMember(Name="filename")]
        public string Filename { get; set; }

        /// <summary>
        /// documentbody
        /// </summary>
        /// <value>documentbody</value>
        [DataMember(Name="documentbody")]
        public string Documentbody { get; set; }

        /// <summary>
        /// subject
        /// </summary>
        /// <value>subject</value>
        [DataMember(Name="subject")]
        public string Subject { get; set; }

        /// <summary>
        /// objectid_cat_gtmattachments@odata.bind
        /// </summary>
        /// <value>objectid_cat_gtmattachments@odata.bind</value>
        [DataMember(Name="objectid_cat_gtmattachments@odata.bind")]
        public string ObjectidCatGtmattachmentsodataBind { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Body4 {\n");
            sb.Append("  Filename: ").Append(Filename).Append("\n");
            sb.Append("  Documentbody: ").Append(Documentbody).Append("\n");
            sb.Append("  Subject: ").Append(Subject).Append("\n");
            sb.Append("  ObjectidCatGtmattachmentsodataBind: ").Append(ObjectidCatGtmattachmentsodataBind).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((Body4)obj);
        }

        /// <summary>
        /// Returns true if Body4 instances are equal
        /// </summary>
        /// <param name="other">Instance of Body4 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Body4 other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Filename == other.Filename ||
                    Filename != null &&
                    Filename.Equals(other.Filename)
                ) && 
                (
                    Documentbody == other.Documentbody ||
                    Documentbody != null &&
                    Documentbody.Equals(other.Documentbody)
                ) && 
                (
                    Subject == other.Subject ||
                    Subject != null &&
                    Subject.Equals(other.Subject)
                ) && 
                (
                    ObjectidCatGtmattachmentsodataBind == other.ObjectidCatGtmattachmentsodataBind ||
                    ObjectidCatGtmattachmentsodataBind != null &&
                    ObjectidCatGtmattachmentsodataBind.Equals(other.ObjectidCatGtmattachmentsodataBind)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Filename != null)
                    hashCode = hashCode * 59 + Filename.GetHashCode();
                    if (Documentbody != null)
                    hashCode = hashCode * 59 + Documentbody.GetHashCode();
                    if (Subject != null)
                    hashCode = hashCode * 59 + Subject.GetHashCode();
                    if (ObjectidCatGtmattachmentsodataBind != null)
                    hashCode = hashCode * 59 + ObjectidCatGtmattachmentsodataBind.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(Body4 left, Body4 right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(Body4 left, Body4 right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
